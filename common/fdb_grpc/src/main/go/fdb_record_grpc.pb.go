// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: fdb_record_grpc.proto

package protos

import (
	src "cio/fdb/record/src"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionCommitResult int32

const (
	TransactionCommitResult_TRANSACTION_SUCCESS    TransactionCommitResult = 0
	TransactionCommitResult_TRANSACTION_NOT_ACTIVE TransactionCommitResult = 1
	TransactionCommitResult_TRANSACTION_FAILED     TransactionCommitResult = 2
)

// Enum value maps for TransactionCommitResult.
var (
	TransactionCommitResult_name = map[int32]string{
		0: "TRANSACTION_SUCCESS",
		1: "TRANSACTION_NOT_ACTIVE",
		2: "TRANSACTION_FAILED",
	}
	TransactionCommitResult_value = map[string]int32{
		"TRANSACTION_SUCCESS":    0,
		"TRANSACTION_NOT_ACTIVE": 1,
		"TRANSACTION_FAILED":     2,
	}
)

func (x TransactionCommitResult) Enum() *TransactionCommitResult {
	p := new(TransactionCommitResult)
	*p = x
	return p
}

func (x TransactionCommitResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionCommitResult) Descriptor() protoreflect.EnumDescriptor {
	return file_fdb_record_grpc_proto_enumTypes[0].Descriptor()
}

func (TransactionCommitResult) Type() protoreflect.EnumType {
	return &file_fdb_record_grpc_proto_enumTypes[0]
}

func (x TransactionCommitResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionCommitResult.Descriptor instead.
func (TransactionCommitResult) EnumDescriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{0}
}

type FDBRemoteSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId int64 `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *FDBRemoteSessionRequest) Reset() {
	*x = FDBRemoteSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBRemoteSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBRemoteSessionRequest) ProtoMessage() {}

func (x *FDBRemoteSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBRemoteSessionRequest.ProtoReflect.Descriptor instead.
func (*FDBRemoteSessionRequest) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *FDBRemoteSessionRequest) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

type FDBRemoteSessionHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FDBRemoteSessionHandle) Reset() {
	*x = FDBRemoteSessionHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBRemoteSessionHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBRemoteSessionHandle) ProtoMessage() {}

func (x *FDBRemoteSessionHandle) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBRemoteSessionHandle.ProtoReflect.Descriptor instead.
func (*FDBRemoteSessionHandle) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *FDBRemoteSessionHandle) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FDBDirectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value        string        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	SubDirectory *FDBDirectory `protobuf:"bytes,3,opt,name=sub_directory,json=subDirectory,proto3,oneof" json:"sub_directory,omitempty"`
}

func (x *FDBDirectory) Reset() {
	*x = FDBDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBDirectory) ProtoMessage() {}

func (x *FDBDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBDirectory.ProtoReflect.Descriptor instead.
func (*FDBDirectory) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *FDBDirectory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FDBDirectory) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FDBDirectory) GetSubDirectory() *FDBDirectory {
	if x != nil {
		return x.SubDirectory
	}
	return nil
}

type FDBRemoteRecordStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session  *FDBRemoteSessionHandle           `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Metadata *descriptorpb.FileDescriptorProto `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	KeySpace *FDBDirectory                     `protobuf:"bytes,3,opt,name=key_space,json=keySpace,proto3" json:"key_space,omitempty"`
}

func (x *FDBRemoteRecordStoreRequest) Reset() {
	*x = FDBRemoteRecordStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBRemoteRecordStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBRemoteRecordStoreRequest) ProtoMessage() {}

func (x *FDBRemoteRecordStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBRemoteRecordStoreRequest.ProtoReflect.Descriptor instead.
func (*FDBRemoteRecordStoreRequest) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *FDBRemoteRecordStoreRequest) GetSession() *FDBRemoteSessionHandle {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *FDBRemoteRecordStoreRequest) GetMetadata() *descriptorpb.FileDescriptorProto {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FDBRemoteRecordStoreRequest) GetKeySpace() *FDBDirectory {
	if x != nil {
		return x.KeySpace
	}
	return nil
}

type FDBRemoteRecordStoreHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Session *FDBRemoteSessionHandle `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	Store   *src.DataStoreInfo      `protobuf:"bytes,3,opt,name=store,proto3" json:"store,omitempty"`
}

func (x *FDBRemoteRecordStoreHandle) Reset() {
	*x = FDBRemoteRecordStoreHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBRemoteRecordStoreHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBRemoteRecordStoreHandle) ProtoMessage() {}

func (x *FDBRemoteRecordStoreHandle) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBRemoteRecordStoreHandle.ProtoReflect.Descriptor instead.
func (*FDBRemoteRecordStoreHandle) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *FDBRemoteRecordStoreHandle) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FDBRemoteRecordStoreHandle) GetSession() *FDBRemoteSessionHandle {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *FDBRemoteRecordStoreHandle) GetStore() *src.DataStoreInfo {
	if x != nil {
		return x.Store
	}
	return nil
}

type FDBRemoteSessionCommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *FDBRemoteSessionHandle `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *FDBRemoteSessionCommitRequest) Reset() {
	*x = FDBRemoteSessionCommitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBRemoteSessionCommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBRemoteSessionCommitRequest) ProtoMessage() {}

func (x *FDBRemoteSessionCommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBRemoteSessionCommitRequest.ProtoReflect.Descriptor instead.
func (*FDBRemoteSessionCommitRequest) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *FDBRemoteSessionCommitRequest) GetSession() *FDBRemoteSessionHandle {
	if x != nil {
		return x.Session
	}
	return nil
}

type FDBSaveRecordCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Store  *FDBRemoteRecordStoreHandle `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	Table  string                      `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Record []byte                      `protobuf:"bytes,3,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *FDBSaveRecordCommand) Reset() {
	*x = FDBSaveRecordCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBSaveRecordCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBSaveRecordCommand) ProtoMessage() {}

func (x *FDBSaveRecordCommand) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBSaveRecordCommand.ProtoReflect.Descriptor instead.
func (*FDBSaveRecordCommand) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *FDBSaveRecordCommand) GetStore() *FDBRemoteRecordStoreHandle {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *FDBSaveRecordCommand) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *FDBSaveRecordCommand) GetRecord() []byte {
	if x != nil {
		return x.Record
	}
	return nil
}

type FDBSaveRecordResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record []byte `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *FDBSaveRecordResult) Reset() {
	*x = FDBSaveRecordResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBSaveRecordResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBSaveRecordResult) ProtoMessage() {}

func (x *FDBSaveRecordResult) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBSaveRecordResult.ProtoReflect.Descriptor instead.
func (*FDBSaveRecordResult) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *FDBSaveRecordResult) GetRecord() []byte {
	if x != nil {
		return x.Record
	}
	return nil
}

type FDBDeleteRecordCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Store    *FDBRemoteRecordStoreHandle `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	RecordId []byte                      `protobuf:"bytes,2,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
}

func (x *FDBDeleteRecordCommand) Reset() {
	*x = FDBDeleteRecordCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBDeleteRecordCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBDeleteRecordCommand) ProtoMessage() {}

func (x *FDBDeleteRecordCommand) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBDeleteRecordCommand.ProtoReflect.Descriptor instead.
func (*FDBDeleteRecordCommand) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{8}
}

func (x *FDBDeleteRecordCommand) GetStore() *FDBRemoteRecordStoreHandle {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *FDBDeleteRecordCommand) GetRecordId() []byte {
	if x != nil {
		return x.RecordId
	}
	return nil
}

type FDBDeleteRecordResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FDBDeleteRecordResult) Reset() {
	*x = FDBDeleteRecordResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBDeleteRecordResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBDeleteRecordResult) ProtoMessage() {}

func (x *FDBDeleteRecordResult) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBDeleteRecordResult.ProtoReflect.Descriptor instead.
func (*FDBDeleteRecordResult) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{9}
}

func (x *FDBDeleteRecordResult) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type FDBRemoteSessionCommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result TransactionCommitResult `protobuf:"varint,1,opt,name=result,proto3,enum=cio.fdb.record.grpc.TransactionCommitResult" json:"result,omitempty"`
	Error  *string                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *FDBRemoteSessionCommitResponse) Reset() {
	*x = FDBRemoteSessionCommitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBRemoteSessionCommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBRemoteSessionCommitResponse) ProtoMessage() {}

func (x *FDBRemoteSessionCommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBRemoteSessionCommitResponse.ProtoReflect.Descriptor instead.
func (*FDBRemoteSessionCommitResponse) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{10}
}

func (x *FDBRemoteSessionCommitResponse) GetResult() TransactionCommitResult {
	if x != nil {
		return x.Result
	}
	return TransactionCommitResult_TRANSACTION_SUCCESS
}

func (x *FDBRemoteSessionCommitResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type FDBDumpAllCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start []byte `protobuf:"bytes,1,opt,name=start,proto3,oneof" json:"start,omitempty"`
	End   []byte `protobuf:"bytes,2,opt,name=end,proto3,oneof" json:"end,omitempty"`
}

func (x *FDBDumpAllCommand) Reset() {
	*x = FDBDumpAllCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBDumpAllCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBDumpAllCommand) ProtoMessage() {}

func (x *FDBDumpAllCommand) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBDumpAllCommand.ProtoReflect.Descriptor instead.
func (*FDBDumpAllCommand) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{11}
}

func (x *FDBDumpAllCommand) GetStart() []byte {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *FDBDumpAllCommand) GetEnd() []byte {
	if x != nil {
		return x.End
	}
	return nil
}

type FDBDumpAllResponseBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*FDBDumpAllResponseBatch_KV `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *FDBDumpAllResponseBatch) Reset() {
	*x = FDBDumpAllResponseBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBDumpAllResponseBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBDumpAllResponseBatch) ProtoMessage() {}

func (x *FDBDumpAllResponseBatch) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBDumpAllResponseBatch.ProtoReflect.Descriptor instead.
func (*FDBDumpAllResponseBatch) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{12}
}

func (x *FDBDumpAllResponseBatch) GetData() []*FDBDumpAllResponseBatch_KV {
	if x != nil {
		return x.Data
	}
	return nil
}

type FDBDumpAllResponseBatch_KV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FDBDumpAllResponseBatch_KV) Reset() {
	*x = FDBDumpAllResponseBatch_KV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_record_grpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBDumpAllResponseBatch_KV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBDumpAllResponseBatch_KV) ProtoMessage() {}

func (x *FDBDumpAllResponseBatch_KV) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_record_grpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBDumpAllResponseBatch_KV.ProtoReflect.Descriptor instead.
func (*FDBDumpAllResponseBatch_KV) Descriptor() ([]byte, []int) {
	return file_fdb_record_grpc_proto_rawDescGZIP(), []int{12, 0}
}

func (x *FDBDumpAllResponseBatch_KV) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *FDBDumpAllResponseBatch_KV) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_fdb_record_grpc_proto protoreflect.FileDescriptor

var file_fdb_record_grpc_proto_rawDesc = []byte{
	0x0a, 0x15, 0x66, 0x64, 0x62, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x17, 0x46, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x28, 0x0a,
	0x16, 0x46, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x0c, 0x46, 0x44, 0x42, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x4b, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x69, 0x6f, 0x2e,
	0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x46, 0x44, 0x42, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c,
	0x73, 0x75, 0x62, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x22, 0xe6, 0x01, 0x0a, 0x1b, 0x46, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x09, 0x6b, 0x65,
	0x79, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x1a, 0x46,
	0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x69, 0x6f,
	0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x46, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x42, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x2e, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x22, 0x66, 0x0a, 0x1d, 0x46, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x01, 0x0a,
	0x14, 0x46, 0x44, 0x42, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x45, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x2d, 0x0a, 0x13, 0x46, 0x44,
	0x42, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x7c, 0x0a, 0x16, 0x46, 0x44, 0x42,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x45, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x15, 0x46, 0x44, 0x42, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x1e, 0x46, 0x44, 0x42,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x63, 0x69,
	0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x57, 0x0a, 0x11, 0x46, 0x44, 0x42, 0x44, 0x75, 0x6d,
	0x70, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x6e, 0x64, 0x22,
	0x8c, 0x01, 0x0a, 0x17, 0x46, 0x44, 0x42, 0x44, 0x75, 0x6d, 0x70, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x43, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x69, 0x6f, 0x2e,
	0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x46, 0x44, 0x42, 0x44, 0x75, 0x6d, 0x70, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x4b, 0x56, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x2c, 0x0a, 0x02, 0x4b, 0x56, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x66,
	0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x32, 0x97, 0x05, 0x0a, 0x09, 0x46, 0x44, 0x42, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x12, 0x69, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x00, 0x12,
	0x75, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x30, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x12, 0x32, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0a, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x2e, 0x63, 0x69, 0x6f, 0x2e,
	0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x46, 0x44, 0x42, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x28, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x53, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x69, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x2b, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x2a, 0x2e,
	0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x44, 0x75, 0x6d, 0x70, 0x12, 0x26, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42,
	0x44, 0x75, 0x6d, 0x70, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x2c,
	0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x44, 0x75, 0x6d, 0x70, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x22, 0x00, 0x30, 0x01,
	0x42, 0x2a, 0x0a, 0x13, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5a, 0x13, 0x63, 0x69, 0x6f, 0x2f, 0x66, 0x64, 0x62,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fdb_record_grpc_proto_rawDescOnce sync.Once
	file_fdb_record_grpc_proto_rawDescData = file_fdb_record_grpc_proto_rawDesc
)

func file_fdb_record_grpc_proto_rawDescGZIP() []byte {
	file_fdb_record_grpc_proto_rawDescOnce.Do(func() {
		file_fdb_record_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_fdb_record_grpc_proto_rawDescData)
	})
	return file_fdb_record_grpc_proto_rawDescData
}

var file_fdb_record_grpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fdb_record_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_fdb_record_grpc_proto_goTypes = []any{
	(TransactionCommitResult)(0),             // 0: cio.fdb.record.grpc.TransactionCommitResult
	(*FDBRemoteSessionRequest)(nil),          // 1: cio.fdb.record.grpc.FDBRemoteSessionRequest
	(*FDBRemoteSessionHandle)(nil),           // 2: cio.fdb.record.grpc.FDBRemoteSessionHandle
	(*FDBDirectory)(nil),                     // 3: cio.fdb.record.grpc.FDBDirectory
	(*FDBRemoteRecordStoreRequest)(nil),      // 4: cio.fdb.record.grpc.FDBRemoteRecordStoreRequest
	(*FDBRemoteRecordStoreHandle)(nil),       // 5: cio.fdb.record.grpc.FDBRemoteRecordStoreHandle
	(*FDBRemoteSessionCommitRequest)(nil),    // 6: cio.fdb.record.grpc.FDBRemoteSessionCommitRequest
	(*FDBSaveRecordCommand)(nil),             // 7: cio.fdb.record.grpc.FDBSaveRecordCommand
	(*FDBSaveRecordResult)(nil),              // 8: cio.fdb.record.grpc.FDBSaveRecordResult
	(*FDBDeleteRecordCommand)(nil),           // 9: cio.fdb.record.grpc.FDBDeleteRecordCommand
	(*FDBDeleteRecordResult)(nil),            // 10: cio.fdb.record.grpc.FDBDeleteRecordResult
	(*FDBRemoteSessionCommitResponse)(nil),   // 11: cio.fdb.record.grpc.FDBRemoteSessionCommitResponse
	(*FDBDumpAllCommand)(nil),                // 12: cio.fdb.record.grpc.FDBDumpAllCommand
	(*FDBDumpAllResponseBatch)(nil),          // 13: cio.fdb.record.grpc.FDBDumpAllResponseBatch
	(*FDBDumpAllResponseBatch_KV)(nil),       // 14: cio.fdb.record.grpc.FDBDumpAllResponseBatch.KV
	(*descriptorpb.FileDescriptorProto)(nil), // 15: google.protobuf.FileDescriptorProto
	(*src.DataStoreInfo)(nil),                // 16: com.apple.foundationdb.record.DataStoreInfo
}
var file_fdb_record_grpc_proto_depIdxs = []int32{
	3,  // 0: cio.fdb.record.grpc.FDBDirectory.sub_directory:type_name -> cio.fdb.record.grpc.FDBDirectory
	2,  // 1: cio.fdb.record.grpc.FDBRemoteRecordStoreRequest.session:type_name -> cio.fdb.record.grpc.FDBRemoteSessionHandle
	15, // 2: cio.fdb.record.grpc.FDBRemoteRecordStoreRequest.metadata:type_name -> google.protobuf.FileDescriptorProto
	3,  // 3: cio.fdb.record.grpc.FDBRemoteRecordStoreRequest.key_space:type_name -> cio.fdb.record.grpc.FDBDirectory
	2,  // 4: cio.fdb.record.grpc.FDBRemoteRecordStoreHandle.session:type_name -> cio.fdb.record.grpc.FDBRemoteSessionHandle
	16, // 5: cio.fdb.record.grpc.FDBRemoteRecordStoreHandle.store:type_name -> com.apple.foundationdb.record.DataStoreInfo
	2,  // 6: cio.fdb.record.grpc.FDBRemoteSessionCommitRequest.session:type_name -> cio.fdb.record.grpc.FDBRemoteSessionHandle
	5,  // 7: cio.fdb.record.grpc.FDBSaveRecordCommand.store:type_name -> cio.fdb.record.grpc.FDBRemoteRecordStoreHandle
	5,  // 8: cio.fdb.record.grpc.FDBDeleteRecordCommand.store:type_name -> cio.fdb.record.grpc.FDBRemoteRecordStoreHandle
	0,  // 9: cio.fdb.record.grpc.FDBRemoteSessionCommitResponse.result:type_name -> cio.fdb.record.grpc.TransactionCommitResult
	14, // 10: cio.fdb.record.grpc.FDBDumpAllResponseBatch.data:type_name -> cio.fdb.record.grpc.FDBDumpAllResponseBatch.KV
	1,  // 11: cio.fdb.record.grpc.FDBRemote.NewSession:input_type -> cio.fdb.record.grpc.FDBRemoteSessionRequest
	4,  // 12: cio.fdb.record.grpc.FDBRemote.NewRecordStore:input_type -> cio.fdb.record.grpc.FDBRemoteRecordStoreRequest
	6,  // 13: cio.fdb.record.grpc.FDBRemote.commit:input_type -> cio.fdb.record.grpc.FDBRemoteSessionCommitRequest
	7,  // 14: cio.fdb.record.grpc.FDBRemote.SaveRecord:input_type -> cio.fdb.record.grpc.FDBSaveRecordCommand
	9,  // 15: cio.fdb.record.grpc.FDBRemote.DeleteRecord:input_type -> cio.fdb.record.grpc.FDBDeleteRecordCommand
	12, // 16: cio.fdb.record.grpc.FDBRemote.GetDump:input_type -> cio.fdb.record.grpc.FDBDumpAllCommand
	2,  // 17: cio.fdb.record.grpc.FDBRemote.NewSession:output_type -> cio.fdb.record.grpc.FDBRemoteSessionHandle
	5,  // 18: cio.fdb.record.grpc.FDBRemote.NewRecordStore:output_type -> cio.fdb.record.grpc.FDBRemoteRecordStoreHandle
	11, // 19: cio.fdb.record.grpc.FDBRemote.commit:output_type -> cio.fdb.record.grpc.FDBRemoteSessionCommitResponse
	8,  // 20: cio.fdb.record.grpc.FDBRemote.SaveRecord:output_type -> cio.fdb.record.grpc.FDBSaveRecordResult
	10, // 21: cio.fdb.record.grpc.FDBRemote.DeleteRecord:output_type -> cio.fdb.record.grpc.FDBDeleteRecordResult
	13, // 22: cio.fdb.record.grpc.FDBRemote.GetDump:output_type -> cio.fdb.record.grpc.FDBDumpAllResponseBatch
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_fdb_record_grpc_proto_init() }
func file_fdb_record_grpc_proto_init() {
	if File_fdb_record_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fdb_record_grpc_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FDBRemoteSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_record_grpc_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FDBRemoteSessionHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_record_grpc_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*FDBDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_record_grpc_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FDBRemoteRecordStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_record_grpc_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*FDBRemoteRecordStoreHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_record_grpc_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*FDBRemoteSessionCommitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_record_grpc_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*FDBSaveRecordCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_record_grpc_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*FDBSaveRecordResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_record_grpc_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*FDBDeleteRecordCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_record_grpc_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*FDBDeleteRecordResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_record_grpc_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*FDBRemoteSessionCommitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_record_grpc_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*FDBDumpAllCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_record_grpc_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*FDBDumpAllResponseBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_record_grpc_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*FDBDumpAllResponseBatch_KV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_fdb_record_grpc_proto_msgTypes[2].OneofWrappers = []any{}
	file_fdb_record_grpc_proto_msgTypes[10].OneofWrappers = []any{}
	file_fdb_record_grpc_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fdb_record_grpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fdb_record_grpc_proto_goTypes,
		DependencyIndexes: file_fdb_record_grpc_proto_depIdxs,
		EnumInfos:         file_fdb_record_grpc_proto_enumTypes,
		MessageInfos:      file_fdb_record_grpc_proto_msgTypes,
	}.Build()
	File_fdb_record_grpc_proto = out.File
	file_fdb_record_grpc_proto_rawDesc = nil
	file_fdb_record_grpc_proto_goTypes = nil
	file_fdb_record_grpc_proto_depIdxs = nil
}
