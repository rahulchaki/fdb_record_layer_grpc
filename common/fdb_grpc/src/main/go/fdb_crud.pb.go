// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: fdb_crud.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FDBCrudCommand_OPERATION int32

const (
	FDBCrudCommand_CREATE FDBCrudCommand_OPERATION = 0
	FDBCrudCommand_LOAD   FDBCrudCommand_OPERATION = 1
	FDBCrudCommand_DELETE FDBCrudCommand_OPERATION = 2
)

// Enum value maps for FDBCrudCommand_OPERATION.
var (
	FDBCrudCommand_OPERATION_name = map[int32]string{
		0: "CREATE",
		1: "LOAD",
		2: "DELETE",
	}
	FDBCrudCommand_OPERATION_value = map[string]int32{
		"CREATE": 0,
		"LOAD":   1,
		"DELETE": 2,
	}
)

func (x FDBCrudCommand_OPERATION) Enum() *FDBCrudCommand_OPERATION {
	p := new(FDBCrudCommand_OPERATION)
	*p = x
	return p
}

func (x FDBCrudCommand_OPERATION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FDBCrudCommand_OPERATION) Descriptor() protoreflect.EnumDescriptor {
	return file_fdb_crud_proto_enumTypes[0].Descriptor()
}

func (FDBCrudCommand_OPERATION) Type() protoreflect.EnumType {
	return &file_fdb_crud_proto_enumTypes[0]
}

func (x FDBCrudCommand_OPERATION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FDBCrudCommand_OPERATION.Descriptor instead.
func (FDBCrudCommand_OPERATION) EnumDescriptor() ([]byte, []int) {
	return file_fdb_crud_proto_rawDescGZIP(), []int{3, 0}
}

type KeysList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys [][]byte `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *KeysList) Reset() {
	*x = KeysList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_crud_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeysList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeysList) ProtoMessage() {}

func (x *KeysList) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_crud_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeysList.ProtoReflect.Descriptor instead.
func (*KeysList) Descriptor() ([]byte, []int) {
	return file_fdb_crud_proto_rawDescGZIP(), []int{0}
}

func (x *KeysList) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

type RecordsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records [][]byte `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *RecordsList) Reset() {
	*x = RecordsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_crud_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordsList) ProtoMessage() {}

func (x *RecordsList) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_crud_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordsList.ProtoReflect.Descriptor instead.
func (*RecordsList) Descriptor() ([]byte, []int) {
	return file_fdb_crud_proto_rawDescGZIP(), []int{1}
}

func (x *RecordsList) GetRecords() [][]byte {
	if x != nil {
		return x.Records
	}
	return nil
}

type FDBTransactionError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error *string `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *FDBTransactionError) Reset() {
	*x = FDBTransactionError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_crud_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBTransactionError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBTransactionError) ProtoMessage() {}

func (x *FDBTransactionError) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_crud_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBTransactionError.ProtoReflect.Descriptor instead.
func (*FDBTransactionError) Descriptor() ([]byte, []int) {
	return file_fdb_crud_proto_rawDescGZIP(), []int{2}
}

func (x *FDBTransactionError) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FDBTransactionError) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type FDBCrudCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database  *string                  `protobuf:"bytes,1,opt,name=database,proto3,oneof" json:"database,omitempty"`
	Table     string                   `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Operation FDBCrudCommand_OPERATION `protobuf:"varint,10,opt,name=operation,proto3,enum=cio.fdb.record.grpc.FDBCrudCommand_OPERATION" json:"operation,omitempty"`
	// Types that are assignable to Data:
	//
	//	*FDBCrudCommand_Keys
	//	*FDBCrudCommand_Records
	//	*FDBCrudCommand_Query
	Data isFDBCrudCommand_Data `protobuf_oneof:"data"`
}

func (x *FDBCrudCommand) Reset() {
	*x = FDBCrudCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_crud_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBCrudCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBCrudCommand) ProtoMessage() {}

func (x *FDBCrudCommand) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_crud_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBCrudCommand.ProtoReflect.Descriptor instead.
func (*FDBCrudCommand) Descriptor() ([]byte, []int) {
	return file_fdb_crud_proto_rawDescGZIP(), []int{3}
}

func (x *FDBCrudCommand) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *FDBCrudCommand) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *FDBCrudCommand) GetOperation() FDBCrudCommand_OPERATION {
	if x != nil {
		return x.Operation
	}
	return FDBCrudCommand_CREATE
}

func (m *FDBCrudCommand) GetData() isFDBCrudCommand_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *FDBCrudCommand) GetKeys() *KeysList {
	if x, ok := x.GetData().(*FDBCrudCommand_Keys); ok {
		return x.Keys
	}
	return nil
}

func (x *FDBCrudCommand) GetRecords() *RecordsList {
	if x, ok := x.GetData().(*FDBCrudCommand_Records); ok {
		return x.Records
	}
	return nil
}

func (x *FDBCrudCommand) GetQuery() *BooleanQuery {
	if x, ok := x.GetData().(*FDBCrudCommand_Query); ok {
		return x.Query
	}
	return nil
}

type isFDBCrudCommand_Data interface {
	isFDBCrudCommand_Data()
}

type FDBCrudCommand_Keys struct {
	Keys *KeysList `protobuf:"bytes,16,opt,name=keys,proto3,oneof"`
}

type FDBCrudCommand_Records struct {
	Records *RecordsList `protobuf:"bytes,20,opt,name=records,proto3,oneof"`
}

type FDBCrudCommand_Query struct {
	Query *BooleanQuery `protobuf:"bytes,24,opt,name=query,proto3,oneof"`
}

func (*FDBCrudCommand_Keys) isFDBCrudCommand_Data() {}

func (*FDBCrudCommand_Records) isFDBCrudCommand_Data() {}

func (*FDBCrudCommand_Query) isFDBCrudCommand_Data() {}

type FDBCrudResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*FDBCrudResponse_Keys
	//	*FDBCrudResponse_Records
	//	*FDBCrudResponse_Success
	//	*FDBCrudResponse_Error
	Data isFDBCrudResponse_Data `protobuf_oneof:"data"`
}

func (x *FDBCrudResponse) Reset() {
	*x = FDBCrudResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_crud_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBCrudResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBCrudResponse) ProtoMessage() {}

func (x *FDBCrudResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_crud_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBCrudResponse.ProtoReflect.Descriptor instead.
func (*FDBCrudResponse) Descriptor() ([]byte, []int) {
	return file_fdb_crud_proto_rawDescGZIP(), []int{4}
}

func (m *FDBCrudResponse) GetData() isFDBCrudResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *FDBCrudResponse) GetKeys() *KeysList {
	if x, ok := x.GetData().(*FDBCrudResponse_Keys); ok {
		return x.Keys
	}
	return nil
}

func (x *FDBCrudResponse) GetRecords() *RecordsList {
	if x, ok := x.GetData().(*FDBCrudResponse_Records); ok {
		return x.Records
	}
	return nil
}

func (x *FDBCrudResponse) GetSuccess() bool {
	if x, ok := x.GetData().(*FDBCrudResponse_Success); ok {
		return x.Success
	}
	return false
}

func (x *FDBCrudResponse) GetError() *FDBTransactionError {
	if x, ok := x.GetData().(*FDBCrudResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isFDBCrudResponse_Data interface {
	isFDBCrudResponse_Data()
}

type FDBCrudResponse_Keys struct {
	Keys *KeysList `protobuf:"bytes,8,opt,name=keys,proto3,oneof"`
}

type FDBCrudResponse_Records struct {
	Records *RecordsList `protobuf:"bytes,16,opt,name=records,proto3,oneof"`
}

type FDBCrudResponse_Success struct {
	Success bool `protobuf:"varint,32,opt,name=success,proto3,oneof"`
}

type FDBCrudResponse_Error struct {
	Error *FDBTransactionError `protobuf:"bytes,64,opt,name=error,proto3,oneof"`
}

func (*FDBCrudResponse_Keys) isFDBCrudResponse_Data() {}

func (*FDBCrudResponse_Records) isFDBCrudResponse_Data() {}

func (*FDBCrudResponse_Success) isFDBCrudResponse_Data() {}

func (*FDBCrudResponse_Error) isFDBCrudResponse_Data() {}

var File_fdb_crud_proto protoreflect.FileDescriptor

var file_fdb_crud_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x66, 0x64, 0x62, 0x5f, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x11, 0x66, 0x64, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x27, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x22, 0x4e, 0x0a, 0x13, 0x46, 0x44, 0x42, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x86, 0x03, 0x0a, 0x0e, 0x46, 0x44, 0x42, 0x43, 0x72, 0x75, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d,
	0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x43, 0x72, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2e, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4b, 0x65, 0x79,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x3c, 0x0a,
	0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x69, 0x6f,
	0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x2d, 0x0a, 0x09, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x02, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x0f, 0x46,
	0x44, 0x42, 0x43, 0x72, 0x75, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63,
	0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x12, 0x3c, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x40, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63,
	0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42,
	0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x61, 0x0a, 0x07, 0x46, 0x44, 0x42, 0x43, 0x72,
	0x75, 0x64, 0x12, 0x56, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x23, 0x2e,
	0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x43, 0x72, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x1a, 0x24, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x43, 0x72, 0x75, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2a, 0x0a, 0x13, 0x63, 0x69,
	0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5a, 0x13, 0x63, 0x69, 0x6f, 0x2f, 0x66, 0x64, 0x62, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fdb_crud_proto_rawDescOnce sync.Once
	file_fdb_crud_proto_rawDescData = file_fdb_crud_proto_rawDesc
)

func file_fdb_crud_proto_rawDescGZIP() []byte {
	file_fdb_crud_proto_rawDescOnce.Do(func() {
		file_fdb_crud_proto_rawDescData = protoimpl.X.CompressGZIP(file_fdb_crud_proto_rawDescData)
	})
	return file_fdb_crud_proto_rawDescData
}

var file_fdb_crud_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fdb_crud_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_fdb_crud_proto_goTypes = []any{
	(FDBCrudCommand_OPERATION)(0), // 0: cio.fdb.record.grpc.FDBCrudCommand.OPERATION
	(*KeysList)(nil),              // 1: cio.fdb.record.grpc.KeysList
	(*RecordsList)(nil),           // 2: cio.fdb.record.grpc.RecordsList
	(*FDBTransactionError)(nil),   // 3: cio.fdb.record.grpc.FDBTransactionError
	(*FDBCrudCommand)(nil),        // 4: cio.fdb.record.grpc.FDBCrudCommand
	(*FDBCrudResponse)(nil),       // 5: cio.fdb.record.grpc.FDBCrudResponse
	(*BooleanQuery)(nil),          // 6: cio.fdb.record.grpc.BooleanQuery
}
var file_fdb_crud_proto_depIdxs = []int32{
	0, // 0: cio.fdb.record.grpc.FDBCrudCommand.operation:type_name -> cio.fdb.record.grpc.FDBCrudCommand.OPERATION
	1, // 1: cio.fdb.record.grpc.FDBCrudCommand.keys:type_name -> cio.fdb.record.grpc.KeysList
	2, // 2: cio.fdb.record.grpc.FDBCrudCommand.records:type_name -> cio.fdb.record.grpc.RecordsList
	6, // 3: cio.fdb.record.grpc.FDBCrudCommand.query:type_name -> cio.fdb.record.grpc.BooleanQuery
	1, // 4: cio.fdb.record.grpc.FDBCrudResponse.keys:type_name -> cio.fdb.record.grpc.KeysList
	2, // 5: cio.fdb.record.grpc.FDBCrudResponse.records:type_name -> cio.fdb.record.grpc.RecordsList
	3, // 6: cio.fdb.record.grpc.FDBCrudResponse.error:type_name -> cio.fdb.record.grpc.FDBTransactionError
	4, // 7: cio.fdb.record.grpc.FDBCrud.execute:input_type -> cio.fdb.record.grpc.FDBCrudCommand
	5, // 8: cio.fdb.record.grpc.FDBCrud.execute:output_type -> cio.fdb.record.grpc.FDBCrudResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_fdb_crud_proto_init() }
func file_fdb_crud_proto_init() {
	if File_fdb_crud_proto != nil {
		return
	}
	file_fdb_filters_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_fdb_crud_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*KeysList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_crud_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RecordsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_crud_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*FDBTransactionError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_crud_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FDBCrudCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_crud_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*FDBCrudResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_fdb_crud_proto_msgTypes[2].OneofWrappers = []any{}
	file_fdb_crud_proto_msgTypes[3].OneofWrappers = []any{
		(*FDBCrudCommand_Keys)(nil),
		(*FDBCrudCommand_Records)(nil),
		(*FDBCrudCommand_Query)(nil),
	}
	file_fdb_crud_proto_msgTypes[4].OneofWrappers = []any{
		(*FDBCrudResponse_Keys)(nil),
		(*FDBCrudResponse_Records)(nil),
		(*FDBCrudResponse_Success)(nil),
		(*FDBCrudResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fdb_crud_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fdb_crud_proto_goTypes,
		DependencyIndexes: file_fdb_crud_proto_depIdxs,
		EnumInfos:         file_fdb_crud_proto_enumTypes,
		MessageInfos:      file_fdb_crud_proto_msgTypes,
	}.Build()
	File_fdb_crud_proto = out.File
	file_fdb_crud_proto_rawDesc = nil
	file_fdb_crud_proto_goTypes = nil
	file_fdb_crud_proto_depIdxs = nil
}
