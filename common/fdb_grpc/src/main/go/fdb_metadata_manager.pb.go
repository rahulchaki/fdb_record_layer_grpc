// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: fdb_metadata_manager.proto

package protos

import (
	src "cio/fdb/record/src"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FDBDatabaseMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version           int32         `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	MetadataNamespace []byte        `protobuf:"bytes,3,opt,name=metadataNamespace,proto3" json:"metadataNamespace,omitempty"`
	RecordsNamespace  []byte        `protobuf:"bytes,4,opt,name=recordsNamespace,proto3" json:"recordsNamespace,omitempty"`
	Metadata          *src.MetaData `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *FDBDatabaseMetadata) Reset() {
	*x = FDBDatabaseMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_metadata_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBDatabaseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBDatabaseMetadata) ProtoMessage() {}

func (x *FDBDatabaseMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_metadata_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBDatabaseMetadata.ProtoReflect.Descriptor instead.
func (*FDBDatabaseMetadata) Descriptor() ([]byte, []int) {
	return file_fdb_metadata_manager_proto_rawDescGZIP(), []int{0}
}

func (x *FDBDatabaseMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FDBDatabaseMetadata) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FDBDatabaseMetadata) GetMetadataNamespace() []byte {
	if x != nil {
		return x.MetadataNamespace
	}
	return nil
}

func (x *FDBDatabaseMetadata) GetRecordsNamespace() []byte {
	if x != nil {
		return x.RecordsNamespace
	}
	return nil
}

func (x *FDBDatabaseMetadata) GetMetadata() *src.MetaData {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type FDBCreateOrOpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string                            `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Schema   *descriptorpb.FileDescriptorProto `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *FDBCreateOrOpenRequest) Reset() {
	*x = FDBCreateOrOpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_metadata_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBCreateOrOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBCreateOrOpenRequest) ProtoMessage() {}

func (x *FDBCreateOrOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_metadata_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBCreateOrOpenRequest.ProtoReflect.Descriptor instead.
func (*FDBCreateOrOpenRequest) Descriptor() ([]byte, []int) {
	return file_fdb_metadata_manager_proto_rawDescGZIP(), []int{1}
}

func (x *FDBCreateOrOpenRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *FDBCreateOrOpenRequest) GetSchema() *descriptorpb.FileDescriptorProto {
	if x != nil {
		return x.Schema
	}
	return nil
}

type FDBCreateOrOpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *FDBDatabaseMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *FDBCreateOrOpenResponse) Reset() {
	*x = FDBCreateOrOpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fdb_metadata_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FDBCreateOrOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FDBCreateOrOpenResponse) ProtoMessage() {}

func (x *FDBCreateOrOpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fdb_metadata_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FDBCreateOrOpenResponse.ProtoReflect.Descriptor instead.
func (*FDBCreateOrOpenResponse) Descriptor() ([]byte, []int) {
	return file_fdb_metadata_manager_proto_rawDescGZIP(), []int{2}
}

func (x *FDBCreateOrOpenResponse) GetMetadata() *FDBDatabaseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_fdb_metadata_manager_proto protoreflect.FileDescriptor

var file_fdb_metadata_manager_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x66, 0x64, 0x62, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x69,
	0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x01, 0x0a, 0x13, 0x46,
	0x44, 0x42, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x72, 0x0a, 0x16, 0x46, 0x44, 0x42, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x4f, 0x70,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x22, 0x5f, 0x0a, 0x17, 0x46, 0x44, 0x42, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x44, 0x42, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x32, 0x81, 0x01, 0x0a, 0x12, 0x46, 0x44, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x6b, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x2b, 0x2e, 0x63, 0x69,
	0x6f, 0x2e, 0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x46, 0x44, 0x42, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x4f, 0x70, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x69, 0x6f, 0x2e, 0x66,
	0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46,
	0x44, 0x42, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2a, 0x0a, 0x13, 0x63, 0x69, 0x6f, 0x2e,
	0x66, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5a,
	0x13, 0x63, 0x69, 0x6f, 0x2f, 0x66, 0x64, 0x62, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fdb_metadata_manager_proto_rawDescOnce sync.Once
	file_fdb_metadata_manager_proto_rawDescData = file_fdb_metadata_manager_proto_rawDesc
)

func file_fdb_metadata_manager_proto_rawDescGZIP() []byte {
	file_fdb_metadata_manager_proto_rawDescOnce.Do(func() {
		file_fdb_metadata_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_fdb_metadata_manager_proto_rawDescData)
	})
	return file_fdb_metadata_manager_proto_rawDescData
}

var file_fdb_metadata_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_fdb_metadata_manager_proto_goTypes = []any{
	(*FDBDatabaseMetadata)(nil),              // 0: cio.fdb.record.grpc.FDBDatabaseMetadata
	(*FDBCreateOrOpenRequest)(nil),           // 1: cio.fdb.record.grpc.FDBCreateOrOpenRequest
	(*FDBCreateOrOpenResponse)(nil),          // 2: cio.fdb.record.grpc.FDBCreateOrOpenResponse
	(*src.MetaData)(nil),                     // 3: com.apple.foundationdb.record.MetaData
	(*descriptorpb.FileDescriptorProto)(nil), // 4: google.protobuf.FileDescriptorProto
}
var file_fdb_metadata_manager_proto_depIdxs = []int32{
	3, // 0: cio.fdb.record.grpc.FDBDatabaseMetadata.metadata:type_name -> com.apple.foundationdb.record.MetaData
	4, // 1: cio.fdb.record.grpc.FDBCreateOrOpenRequest.schema:type_name -> google.protobuf.FileDescriptorProto
	0, // 2: cio.fdb.record.grpc.FDBCreateOrOpenResponse.metadata:type_name -> cio.fdb.record.grpc.FDBDatabaseMetadata
	1, // 3: cio.fdb.record.grpc.FDBMetadataManager.CreateOrOpen:input_type -> cio.fdb.record.grpc.FDBCreateOrOpenRequest
	2, // 4: cio.fdb.record.grpc.FDBMetadataManager.CreateOrOpen:output_type -> cio.fdb.record.grpc.FDBCreateOrOpenResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_fdb_metadata_manager_proto_init() }
func file_fdb_metadata_manager_proto_init() {
	if File_fdb_metadata_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fdb_metadata_manager_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FDBDatabaseMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_metadata_manager_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FDBCreateOrOpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fdb_metadata_manager_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*FDBCreateOrOpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fdb_metadata_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fdb_metadata_manager_proto_goTypes,
		DependencyIndexes: file_fdb_metadata_manager_proto_depIdxs,
		MessageInfos:      file_fdb_metadata_manager_proto_msgTypes,
	}.Build()
	File_fdb_metadata_manager_proto = out.File
	file_fdb_metadata_manager_proto_rawDesc = nil
	file_fdb_metadata_manager_proto_goTypes = nil
	file_fdb_metadata_manager_proto_depIdxs = nil
}
