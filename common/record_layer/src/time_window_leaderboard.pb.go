//
// time_window_leaderboard.proto
//
// This source file is part of the FoundationDB open source project
//
// Copyright 2015-2018 Apple Inc. and the FoundationDB project authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: time_window_leaderboard.proto

package src

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimeWindowLeaderboardDirectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateTimestamp *uint64                  `protobuf:"varint,1,opt,name=update_timestamp,json=updateTimestamp" json:"update_timestamp,omitempty"`
	HighScoreFirst  *bool                    `protobuf:"varint,2,opt,name=high_score_first,json=highScoreFirst" json:"high_score_first,omitempty"`
	NextKey         *uint32                  `protobuf:"varint,3,opt,name=next_key,json=nextKey" json:"next_key,omitempty"`
	Leaderboards    []*TimeWindowLeaderboard `protobuf:"bytes,4,rep,name=leaderboards" json:"leaderboards,omitempty"`
}

func (x *TimeWindowLeaderboardDirectory) Reset() {
	*x = TimeWindowLeaderboardDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_window_leaderboard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeWindowLeaderboardDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeWindowLeaderboardDirectory) ProtoMessage() {}

func (x *TimeWindowLeaderboardDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_time_window_leaderboard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeWindowLeaderboardDirectory.ProtoReflect.Descriptor instead.
func (*TimeWindowLeaderboardDirectory) Descriptor() ([]byte, []int) {
	return file_time_window_leaderboard_proto_rawDescGZIP(), []int{0}
}

func (x *TimeWindowLeaderboardDirectory) GetUpdateTimestamp() uint64 {
	if x != nil && x.UpdateTimestamp != nil {
		return *x.UpdateTimestamp
	}
	return 0
}

func (x *TimeWindowLeaderboardDirectory) GetHighScoreFirst() bool {
	if x != nil && x.HighScoreFirst != nil {
		return *x.HighScoreFirst
	}
	return false
}

func (x *TimeWindowLeaderboardDirectory) GetNextKey() uint32 {
	if x != nil && x.NextKey != nil {
		return *x.NextKey
	}
	return 0
}

func (x *TimeWindowLeaderboardDirectory) GetLeaderboards() []*TimeWindowLeaderboard {
	if x != nil {
		return x.Leaderboards
	}
	return nil
}

type TimeWindowLeaderboardSubDirectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HighScoreFirst *bool `protobuf:"varint,1,opt,name=high_score_first,json=highScoreFirst" json:"high_score_first,omitempty"`
}

func (x *TimeWindowLeaderboardSubDirectory) Reset() {
	*x = TimeWindowLeaderboardSubDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_window_leaderboard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeWindowLeaderboardSubDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeWindowLeaderboardSubDirectory) ProtoMessage() {}

func (x *TimeWindowLeaderboardSubDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_time_window_leaderboard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeWindowLeaderboardSubDirectory.ProtoReflect.Descriptor instead.
func (*TimeWindowLeaderboardSubDirectory) Descriptor() ([]byte, []int) {
	return file_time_window_leaderboard_proto_rawDescGZIP(), []int{1}
}

func (x *TimeWindowLeaderboardSubDirectory) GetHighScoreFirst() bool {
	if x != nil && x.HighScoreFirst != nil {
		return *x.HighScoreFirst
	}
	return false
}

type TimeWindowLeaderboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           *uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	StartTimestamp *uint64 `protobuf:"varint,2,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	EndTimestamp   *uint64 `protobuf:"varint,3,opt,name=end_timestamp,json=endTimestamp" json:"end_timestamp,omitempty"`
	SubspaceKey    []byte  `protobuf:"bytes,5,opt,name=subspace_key,json=subspaceKey" json:"subspace_key,omitempty"` // Subkey within the index's primary and secondary subspaces.
	Nlevels        *int32  `protobuf:"varint,6,opt,name=nlevels" json:"nlevels,omitempty"`
}

func (x *TimeWindowLeaderboard) Reset() {
	*x = TimeWindowLeaderboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_window_leaderboard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeWindowLeaderboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeWindowLeaderboard) ProtoMessage() {}

func (x *TimeWindowLeaderboard) ProtoReflect() protoreflect.Message {
	mi := &file_time_window_leaderboard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeWindowLeaderboard.ProtoReflect.Descriptor instead.
func (*TimeWindowLeaderboard) Descriptor() ([]byte, []int) {
	return file_time_window_leaderboard_proto_rawDescGZIP(), []int{2}
}

func (x *TimeWindowLeaderboard) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *TimeWindowLeaderboard) GetStartTimestamp() uint64 {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return 0
}

func (x *TimeWindowLeaderboard) GetEndTimestamp() uint64 {
	if x != nil && x.EndTimestamp != nil {
		return *x.EndTimestamp
	}
	return 0
}

func (x *TimeWindowLeaderboard) GetSubspaceKey() []byte {
	if x != nil {
		return x.SubspaceKey
	}
	return nil
}

func (x *TimeWindowLeaderboard) GetNlevels() int32 {
	if x != nil && x.Nlevels != nil {
		return *x.Nlevels
	}
	return 0
}

var File_time_window_leaderboard_proto protoreflect.FileDescriptor

var file_time_window_leaderboard_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xea, 0x01, 0x0a, 0x1e, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x28,
	0x0a, 0x10, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x69, 0x67, 0x68, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x58, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x65, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x0c, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x22, 0x4d, 0x0a,
	0x21, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x75, 0x62, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x69,
	0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x22, 0xb6, 0x01, 0x0a,
	0x15, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x73, 0x42, 0x30, 0x42, 0x1a, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x5a, 0x12, 0x63, 0x69, 0x6f, 0x2f, 0x66, 0x64, 0x62, 0x2f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2f, 0x73, 0x72, 0x63,
}

var (
	file_time_window_leaderboard_proto_rawDescOnce sync.Once
	file_time_window_leaderboard_proto_rawDescData = file_time_window_leaderboard_proto_rawDesc
)

func file_time_window_leaderboard_proto_rawDescGZIP() []byte {
	file_time_window_leaderboard_proto_rawDescOnce.Do(func() {
		file_time_window_leaderboard_proto_rawDescData = protoimpl.X.CompressGZIP(file_time_window_leaderboard_proto_rawDescData)
	})
	return file_time_window_leaderboard_proto_rawDescData
}

var file_time_window_leaderboard_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_time_window_leaderboard_proto_goTypes = []any{
	(*TimeWindowLeaderboardDirectory)(nil),    // 0: com.apple.foundationdb.record.TimeWindowLeaderboardDirectory
	(*TimeWindowLeaderboardSubDirectory)(nil), // 1: com.apple.foundationdb.record.TimeWindowLeaderboardSubDirectory
	(*TimeWindowLeaderboard)(nil),             // 2: com.apple.foundationdb.record.TimeWindowLeaderboard
}
var file_time_window_leaderboard_proto_depIdxs = []int32{
	2, // 0: com.apple.foundationdb.record.TimeWindowLeaderboardDirectory.leaderboards:type_name -> com.apple.foundationdb.record.TimeWindowLeaderboard
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_time_window_leaderboard_proto_init() }
func file_time_window_leaderboard_proto_init() {
	if File_time_window_leaderboard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_time_window_leaderboard_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TimeWindowLeaderboardDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_window_leaderboard_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TimeWindowLeaderboardSubDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_window_leaderboard_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TimeWindowLeaderboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_time_window_leaderboard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_time_window_leaderboard_proto_goTypes,
		DependencyIndexes: file_time_window_leaderboard_proto_depIdxs,
		MessageInfos:      file_time_window_leaderboard_proto_msgTypes,
	}.Build()
	File_time_window_leaderboard_proto = out.File
	file_time_window_leaderboard_proto_rawDesc = nil
	file_time_window_leaderboard_proto_goTypes = nil
	file_time_window_leaderboard_proto_depIdxs = nil
}
