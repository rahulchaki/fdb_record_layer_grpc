//
// resolver_state.proto
//
// This source file is part of the FoundationDB open source project
//
// Copyright 2015-2018 Apple Inc. and the FoundationDB project authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: resolver_state.proto

package src

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WriteLock int32

const (
	WriteLock_UNLOCKED     WriteLock = 1
	WriteLock_WRITE_LOCKED WriteLock = 2
	WriteLock_RETIRED      WriteLock = 3
)

// Enum value maps for WriteLock.
var (
	WriteLock_name = map[int32]string{
		1: "UNLOCKED",
		2: "WRITE_LOCKED",
		3: "RETIRED",
	}
	WriteLock_value = map[string]int32{
		"UNLOCKED":     1,
		"WRITE_LOCKED": 2,
		"RETIRED":      3,
	}
)

func (x WriteLock) Enum() *WriteLock {
	p := new(WriteLock)
	*p = x
	return p
}

func (x WriteLock) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WriteLock) Descriptor() protoreflect.EnumDescriptor {
	return file_resolver_state_proto_enumTypes[0].Descriptor()
}

func (WriteLock) Type() protoreflect.EnumType {
	return &file_resolver_state_proto_enumTypes[0]
}

func (x WriteLock) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *WriteLock) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = WriteLock(num)
	return nil
}

// Deprecated: Use WriteLock.Descriptor instead.
func (WriteLock) EnumDescriptor() ([]byte, []int) {
	return file_resolver_state_proto_rawDescGZIP(), []int{0}
}

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lock    *WriteLock `protobuf:"varint,1,opt,name=lock,enum=com.apple.foundationdb.record.WriteLock" json:"lock,omitempty"`
	Version *int32     `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resolver_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_resolver_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_resolver_state_proto_rawDescGZIP(), []int{0}
}

func (x *State) GetLock() WriteLock {
	if x != nil && x.Lock != nil {
		return *x.Lock
	}
	return WriteLock_UNLOCKED
}

func (x *State) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

var File_resolver_state_proto protoreflect.FileDescriptor

var file_resolver_state_proto_rawDesc = []byte{
	0x0a, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x65, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x64, 0x62, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2a, 0x38, 0x0a, 0x09, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x43,
	0x4b, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x54, 0x49, 0x52, 0x45, 0x44,
	0x10, 0x03, 0x42, 0x28, 0x42, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x12, 0x63, 0x69, 0x6f, 0x2f, 0x66, 0x64,
	0x62, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x73, 0x72, 0x63,
}

var (
	file_resolver_state_proto_rawDescOnce sync.Once
	file_resolver_state_proto_rawDescData = file_resolver_state_proto_rawDesc
)

func file_resolver_state_proto_rawDescGZIP() []byte {
	file_resolver_state_proto_rawDescOnce.Do(func() {
		file_resolver_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_resolver_state_proto_rawDescData)
	})
	return file_resolver_state_proto_rawDescData
}

var file_resolver_state_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_resolver_state_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_resolver_state_proto_goTypes = []any{
	(WriteLock)(0), // 0: com.apple.foundationdb.record.WriteLock
	(*State)(nil),  // 1: com.apple.foundationdb.record.State
}
var file_resolver_state_proto_depIdxs = []int32{
	0, // 0: com.apple.foundationdb.record.State.lock:type_name -> com.apple.foundationdb.record.WriteLock
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_resolver_state_proto_init() }
func file_resolver_state_proto_init() {
	if File_resolver_state_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_resolver_state_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resolver_state_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resolver_state_proto_goTypes,
		DependencyIndexes: file_resolver_state_proto_depIdxs,
		EnumInfos:         file_resolver_state_proto_enumTypes,
		MessageInfos:      file_resolver_state_proto_msgTypes,
	}.Build()
	File_resolver_state_proto = out.File
	file_resolver_state_proto_rawDesc = nil
	file_resolver_state_proto_goTypes = nil
	file_resolver_state_proto_depIdxs = nil
}
